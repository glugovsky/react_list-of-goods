{"version":3,"sources":["components/Button/Button.tsx","App.tsx","index.tsx"],"names":["Button","children","styleClass","onClick","isLightCondition","type","className","classNames","defaultProps","SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","firstGood","secondGood","ALPHABET","localeCompare","LENGTH","length","reverse","console","log","App","state","NONE","handleReorderGoods","newSortType","setState","handleReverseGoods","handleResetGoods","this","map","good","indexOf","React","Component","ReactDOM","render","document","getElementById"],"mappings":"yQAUaA,EAA0B,SAAC,GAKjC,IAJLC,EAII,EAJJA,SACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,QACAC,EACI,EADJA,iBAEA,OACE,wBACEC,KAAK,SACLC,UAAWC,IACT,SACAL,EACA,CAAE,WAAYE,IAEhBD,QAASA,EAPX,SASGF,KAKPD,EAAOQ,aAAe,CACpBJ,kBAAkB,GC3Bb,IAaFK,EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAeK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAGNC,EAAY,YAAOH,GAuBzB,OArBAG,EAAaC,MAAK,SAACC,EAAWC,GAC5B,OAAQL,GACN,KAAKJ,EAASU,SACZ,OAAOF,EAAUG,cAAcF,GAEjC,KAAKT,EAASY,OACZ,OAAOJ,EAAUK,OAASJ,EAAWI,OAEvC,QACE,OAAO,OAIM,IAAfR,GACFC,EAAaQ,UAKfC,QAAQC,IAAIZ,EAAUC,GAEfC,G,SAxCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAiDE,IAAMiB,EAAb,4MACEC,MAAwB,CACtBb,YAAY,EACZD,SAAUJ,EAASmB,MAHvB,EAMEC,mBAAqB,SAACC,GACpB,EAAKC,SAAS,CAAElB,SAAUiB,KAP9B,EAUEE,mBAAqB,WACnB,EAAKD,UAAS,SAAAJ,GAAK,MAAK,CAAEb,YAAaa,EAAMb,gBAXjD,EAcEmB,iBAAmB,WACjB,EAAKF,SAAS,CAAElB,SAAUJ,EAASmB,KAAMd,YAAY,KAfzD,4CAkBE,WAAU,IAAD,OACP,EAAiCoB,KAAKP,MAA9Bd,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,WAElB,OACE,sBAAKR,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,cAAC,EAAD,CACEJ,WAAW,UACXC,QAAS,kBAAM,EAAK0B,mBAAmBpB,EAASU,WAChDf,iBAAkBS,IAAaJ,EAASU,SAH1C,iCAQA,cAAC,EAAD,CACEjB,WAAW,aACXC,QAAS,kBAAM,EAAK0B,mBAAmBpB,EAASY,SAChDjB,iBAAkBS,IAAaJ,EAASY,OAH1C,4BAQA,cAAC,EAAD,CACEnB,WAAW,aACXC,QAAS+B,KAAKF,mBACd5B,kBAAmBU,EAHrB,sBAQED,IAAaJ,EAASmB,MAAQd,IAC9B,cAAC,EAAD,CACEZ,WAAW,YACXC,QAAS+B,KAAKD,iBAFhB,sBASJ,6BACGtB,EAAkBD,EAAiBwB,KAAKP,OAAOQ,KAAI,SAAAC,GAAI,OACtD,oBAAI,UAAQ,OAAZ,SAAqEA,GAArE,UAA2BA,EAA3B,YAAmC1B,EAAgB2B,QAAQD,iBA5DvE,GAAyBE,IAAMC,WChE/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f09ef4c8.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\ninterface Props {\n  children: string;\n  styleClass: string;\n  onClick: React.MouseEventHandler;\n  isLightCondition?: boolean;\n}\n\nexport const Button: React.FC<Props> = ({\n  children,\n  styleClass,\n  onClick,\n  isLightCondition,\n}) => {\n  return (\n    <button\n      type=\"button\"\n      className={classNames(\n        'button',\n        styleClass,\n        { 'is-light': isLightCondition },\n      )}\n      onClick={onClick}\n    >\n      {children}\n    </button>\n  );\n};\n\nButton.defaultProps = {\n  isLightCondition: true,\n};\n","import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport { Button } from './components/Button';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((firstGood, secondGood) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return firstGood.localeCompare(secondGood);\n\n      case SortType.LENGTH:\n        return firstGood.length - secondGood.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed === true) {\n    visibleGoods.reverse();\n  }\n\n  // Sort and reverse goods if needed\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\n// type State = {\n//   isReversed: boolean,\n//   sortType: SortType,\n// };\n\nexport class App extends React.Component<{}, ReorderOptions> {\n  state: ReorderOptions = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handleReorderGoods = (newSortType: SortType) => {\n    this.setState({ sortType: newSortType });\n  };\n\n  handleReverseGoods = () => {\n    this.setState(state => ({ isReversed: !state.isReversed }));\n  };\n\n  handleResetGoods = () => {\n    this.setState({ sortType: SortType.NONE, isReversed: false });\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <Button\n            styleClass=\"is-info\"\n            onClick={() => this.handleReorderGoods(SortType.ALPHABET)}\n            isLightCondition={sortType !== SortType.ALPHABET}\n          >\n            Sort alphabetically\n          </Button>\n\n          <Button\n            styleClass=\"is-success\"\n            onClick={() => this.handleReorderGoods(SortType.LENGTH)}\n            isLightCondition={sortType !== SortType.LENGTH}\n          >\n            Sort by length\n          </Button>\n\n          <Button\n            styleClass=\"is-warning\"\n            onClick={this.handleReverseGoods}\n            isLightCondition={!isReversed}\n          >\n            Reverse\n          </Button>\n\n          {(sortType !== SortType.NONE || isReversed) && (\n            <Button\n              styleClass=\"is-danger\"\n              onClick={this.handleResetGoods}\n            >\n              Reset\n            </Button>\n          )}\n        </div>\n\n        <ul>\n          {getReorderedGoods(goodsFromServer, this.state).map(good => (\n            <li data-cy=\"Good\" key={`${good}-${goodsFromServer.indexOf(good)}`}>{good}</li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}